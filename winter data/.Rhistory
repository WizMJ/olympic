runApp('coursera/9. developing data products/distribution')
runApp('coursera/9. developing data products/distribution')
install.packages('rsconnect')
install.packages("rsconnect")
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='wizmj',
token='B59F064E9FF102B84DC58BB92EAFB705',
secret='<SECRET>')
rsconnect::setAccountInfo(name='wizmj',
token='B59F064E9FF102B84DC58BB92EAFB705',
secret='<SECRET>')
library(rsconnect)
rsconnect::setAccountInfo(name='wizmj',
token='B59F064E9FF102B84DC58BB92EAFB705',
secret='<SECRET>')
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='wizmj',
token='B59F064E9FF102B84DC58BB92EAFB705',
secret='<SECRET>')
rsconnect::setAccountInfo(name='wizmj',
token='B59F064E9FF102B84DC58BB92EAFB705',
secret='06CexXoB7YCVnqysbtfgEy5+C2PwzgBg1Uo5gUqT')
shiny::runApp('coursera/9. developing data products/distribution')
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- 75
high_pts <- 85
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- 75
high_pts <- 85
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- 75; high_pts <- 85
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
prob <- pnorm(high_pts, mean, sd) - pnorm(low_points, mean, sd)
result <- paste("P(",low_lim,"< X <",upp_lim,") =", round(prob, 4))
mtext(result, 3, cex=1.5, font=1)
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- mean - 3.5*sd ; high_pts <- 89
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
pnorm(high_pts, mean, sd) - pnorm(low_points, mean, sd)
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- mean - 3.5*sd ; high_pts <- 89
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
pnorm(high_pts, mean, sd) - pnorm(low_pts, mean, sd)
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- mean - 3.5*sd ; high_pts <- 89
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
pnorm(high_pts, mean, sd) - pnorm(low_pts, mean, sd)
result <- paste("P(",low_pts,"< X <",high_pts,") =", round(prob, 4))
mtext(result, 3, cex=1.5, font=1)
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- mean - 3.5*sd ; high_pts <- 89
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
prob <- pnorm(high_pts, mean, sd) - pnorm(low_pts, mean, sd)
result <- paste("P(",low_pts,"< X <",high_pts,") =", round(prob, 4))
mtext(result, 3, cex=1.5, font=1)
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- 0 ; high_pts <- 89
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
prob <- pnorm(high_pts, mean, sd) - pnorm(low_pts, mean, sd)
result <- paste("P(",low_pts,"< X <",high_pts,") =", round(prob, 4))
mtext(result, 3, cex=1.5, font=1)
mean=79; sd=6
pts <- seq(-3.5, 3.5, length=1000)*sd +mean  # -3.5 std dev to +3.5 std dev and no more than 100 points
den <- dnorm(pts,mean,sd)
plot(pts, den, type="l", xlab="math scores", ylab="density", main="Normal Distribution for math scores")
low_pts <- 0 ; high_pts <- 89
range <- pts >= low_pts & pts <= high_pts
polygon(c(low_pts,pts[range],high_pts), c(0,den[range],0), col="red")
prob <- pnorm(high_pts, mean, sd) - pnorm(low_pts, mean, sd)
result <- paste("P(",low_pts,"< X <",high_pts,") =", round(prob, 4))
mtext(result, 3, cex=1.5, font=1)
setwd("D:/R/Olympic/winter data")
library(dplyr)
library(AER)
library(ggplot2)
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
setwd("D:/R/Olympic/winter olympic meda")
library(dplyr)
library(AER)
library(ggplot2)
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
data <- data[,-1]
setwd("D:/R/Olympic/winter data")
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
data <- data[,-1]
View(data)
year <- year[-1]
tidy.data <- c()
for (i in year){
if (i == 1994){m <- 2
} else { m <- 4}
sub.data1 <- subset(data, select = c(Country, Total), year == i - m)
colnames(sub.data1)[2] <- "pre_Total"
sub.data1$pre_Total_s <- sub.data1$pre_Total/sum(sub.data1$pre_Total, na.rm = TRUE)*100
sub.data2 <- subset(data, year == i)
tidy.data <- rbind(tidy.data, merge(sub.data2,sub.data1,all.x=TRUE, by ="Country"))
}
View(tidy.data)
data %>% filter(year = 1992)
filter(data, year = 1992)
filter(data, year == 1992)
69+467
View(tidy.data)
coef_pval <- c()
for (i in year){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(lm(Total_s ~ pre_Total_s + log(GDP) + log(POP), data = train))$coefficients[,c(1,4)]
coef_pval <- cbind(coef_pval,temp)
}
name <- c()
for (i in year){
name <- c(name, paste(i,"Coef"),paste(i,"p-value"))
}
dimnames(coef_pval) <- list(c("Intercept", "pre_Total","log(GDP)","log(POP)"),c(name))
coef_pval
View(coef_pval)
year
View(tidy.data)
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
View(city_temp)
View(city_temp)
temp <- merge(tidy.data, city_temp, all.x=TRUE, by="Country")
View(temp)
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
View(tidy.data)
tidy.data1 <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
View(tidy.data1)
temp <-  arrange(tidy.data1, year)
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data1 <-  arrange(temp, year)
View(tidy.data1)
qnorm(0.975)
1/12
1-1/12
qnorm(1-1/12)
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
tidy.data1 <- ifelse(tidy.data1$Min_temp <=-5, Cold, ifelse(tidy.data1$Min_temp >=10, Hot, Warm))
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
ifelse(tidy.data1$Min_temp <=-5, Cold, ifelse(tidy.data1$Min_temp >=10, Hot, Warm))
ifelse(tidy.data1$Min_temp <=-5, factor(Cold), ifelse(tidy.data1$Min_temp >=10, factor(Hot),
factor(Warm)))
a <- tidy.data1$Min_temp
ifelse(a <=-5, 0,1)
a <- ifelse(a <=-5, 0,1)
a <- tidy.data1$Min_temp
a <- ifelse(a <=-5, factor(Cold),factor(Hot))
a <- ifelse(a <=-5, factor("Cold"),factor("Hot"))
a
a <- tidy.data1$Min_temp
a
a <- ifelse(a <=-5, factor("Cold"),factor("Hot"))
a
a <- ifelse(a <=-5, "Cold","Hot")
a <- tidy.data1$Min_temp
a <- ifelse(a <=-5, "Cold","Hot")
a
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
ifelse(tidy.data1$Min_temp <=-5, "Cold", ifelse(tidy.data1$Min_temp >=10, "Hot", "Warm"))
str(tidy.data1)
temp <- tidy.data1$Min_temp <- ifelse(tidy.data1$Min_temp <=-5, "Cold",
ifelse(tidy.data1$Min_temp >=10, "Hot", "Warm"))
is.na(temp)
which(is.na(temp))
tidy.data1$Min_temp <- tidy.data1$Min_temp <- ifelse(tidy.data1$Min_temp <=-5, "Cold",
ifelse(tidy.data1$Min_temp >=10, "Hot", "Warm"))
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
tidy.data$Min_temp <- tidy.data$Min_temp <- ifelse(tidy.data$Min_temp <=-5, "Cold",
ifelse(tidy.data$Min_temp >=10, "Hot", "Warm"))
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
tidy.data$Min_temp <- tidy.data$Min_temp <- ifelse(tidy.data$Min_temp <=-5, "Cold",
ifelse(tidy.data$Min_temp >=10, "Hot", "Warm"))
View(tidy.data)
rm(list=ls())
setwd("D:/R/Olympic/winter data")
library(dplyr)
library(AER)
library(ggplot2)
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
data <- data[,-1]
year <- year[-1]
tidy.data <- c()
for (i in year){
if (i == 1994){m <- 2
} else { m <- 4}
sub.data1 <- subset(data, select = c(Country, Total), year == i - m)
colnames(sub.data1)[2] <- "pre_Total"
sub.data1$pre_Total_s <- sub.data1$pre_Total/sum(sub.data1$pre_Total, na.rm = TRUE)*100
sub.data2 <- subset(data, year == i)
tidy.data <- rbind(tidy.data, merge(sub.data2,sub.data1,all.x=TRUE, by ="Country"))
}
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
View(tidy.data)
View(tidy.data)
#Case1: <=-5 for Cold, >=10 for Hot
tidy.data$Min_temp <- tidy.data$Min_temp <- ifelse(tidy.data$Min_temp <=-5, "Cold",
ifelse(tidy.data$Min_temp >=10, "Hot", "Warm"))
View(tidy.data)
tidy.data$Min_temp <- as.factor(tidy.data$Min_temp)
str(tidy.data)
coef_pval <- c()
for (i in year){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(lm(Total_s ~ pre_Total_s + log(GDP) + log(POP) +Min_temp,
data = train))$coefficients[,c(1,4)]
coef_pval <- cbind(coef_pval,temp)
}
name <- c()
for (i in year){
name <- c(name, paste(i,"Coef"),paste(i,"p-value"))
}
dimnames(coef_pval) <- list(c("Intercept", "pre_Total","log(GDP)","log(POP)","temp"),c(name))
View(coef_pval)
rm(list=ls())
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
data <- data[,-1]
year <- year[-1]
tidy.data <- c()
for (i in year){
if (i == 1994){m <- 2
} else { m <- 4}
sub.data1 <- subset(data, select = c(Country, Total), year == i - m)
colnames(sub.data1)[2] <- "pre_Total"
sub.data1$pre_Total_s <- sub.data1$pre_Total/sum(sub.data1$pre_Total, na.rm = TRUE)*100
sub.data2 <- subset(data, year == i)
tidy.data <- rbind(tidy.data, merge(sub.data2,sub.data1,all.x=TRUE, by ="Country"))
}
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
tidy.data$Min_temp <- tidy.data$Min_temp <- ifelse(tidy.data$Min_temp <=-5, "Cold",
ifelse(tidy.data$Min_temp >=10, "Hot", "Warm"))
tidy.data$Min_temp <- as.factor(tidy.data$Min_temp)
relevel(tidy.data$Min_temp, ref="Warm")
tidy.data$Min_temp <- relevel(tidy.data$Min_temp, ref="Warm")
str(tidy.data)
setwd("D:/R/Olympic/winter data")
library(dplyr)
library(AER)
library(ggplot2)
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
data <- data[,-1]
year <- year[-1]
tidy.data <- c()
for (i in year){
if (i == 1994){m <- 2
} else { m <- 4}
sub.data1 <- subset(data, select = c(Country, Total), year == i - m)
colnames(sub.data1)[2] <- "pre_Total"
sub.data1$pre_Total_s <- sub.data1$pre_Total/sum(sub.data1$pre_Total, na.rm = TRUE)*100
sub.data2 <- subset(data, year == i)
tidy.data <- rbind(tidy.data, merge(sub.data2,sub.data1,all.x=TRUE, by ="Country"))
}
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
tidy.data$Min_temp <- tidy.data$Min_temp <- ifelse(tidy.data$Min_temp <=-5, "Cold",
ifelse(tidy.data$Min_temp >=10, "Hot", "Warm"))
tidy.data$Min_temp <- as.factor(tidy.data$Min_temp)
str(tidy.data)
tidy.data$Min_temp <- relevel(tidy.data$Min_temp, ref="Warm")
str(tidy.data)
###------------tidy data completed -------------
### All NA's are removed and then simulate
### Linear Regressoin
coef_pval <- c()
for (i in year){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(lm(Total_s ~ pre_Total_s + log(GDP) + log(POP) +Min_temp,
data = train))$coefficients[,c(1,4)]
coef_pval <- cbind(coef_pval,temp)
}
View(coef_pval)
name <- c()
for (i in year){
name <- c(name, paste(i,"Coef"),paste(i,"p-value"))
}
dimnames(coef_pval) <- list(c("Intercept", "pre_Total","log(GDP)","log(POP)","factor(Cold)",
"factor(Hot)",c(name)))
name <- c()
for (i in year){
name <- c(name, paste(i,"Coef"),paste(i,"p-value"))
}
name
name <- c()
for (i in year){
name <- c(name, paste(i,"Coef"),paste(i,"p-value"))
}
dimnames(coef_pval) <- list(c("Intercept", "pre_Total","log(GDP)","log(POP)","factor(Cold)",
"factor(Hot)"),c(name))
View(coef_pval)
coef_pval <- c()
for (i in year){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train))$coefficients[-5 ,c(1,4)]  #log scale remove
coef_pval <- cbind(coef_pval,temp)
}
rm(list=ls())
setwd("D:/R/Olympic/winter data")
library(dplyr)
library(AER)
library(ggplot2)
year <- seq(1994,2014,4)
year <- c(1992,year)
data <- c()
for (i in year){
file.name <-paste0("winter_df",i,".csv")
temp_df <- read.csv(file.name,header=T,sep=',')
temp_df$year <- as.factor(i)
data <- rbind(data,temp_df)
}
data <- data[,-1]
year <- year[-1]
tidy.data <- c()
for (i in year){
if (i == 1994){m <- 2
} else { m <- 4}
sub.data1 <- subset(data, select = c(Country, Total), year == i - m)
colnames(sub.data1)[2] <- "pre_Total"
sub.data1$pre_Total_s <- sub.data1$pre_Total/sum(sub.data1$pre_Total, na.rm = TRUE)*100
sub.data2 <- subset(data, year == i)
tidy.data <- rbind(tidy.data, merge(sub.data2,sub.data1,all.x=TRUE, by ="Country"))
}
city_temp <- read.csv("D:/R/olympic/city temp/country temp.csv", header =T, sep =",")
temp <- merge(tidy.data, city_temp[,c("Country","Avg_temp","Min_temp")], all.x=TRUE, by="Country")
tidy.data <-  arrange(temp, year)
### factor cases for city temp: Cold, Warm, Hot
#Case1: <=-5 for Cold, >=10 for Hot
tidy.data$Min_temp <- tidy.data$Min_temp <- ifelse(tidy.data$Min_temp <=-5, "Cold",
ifelse(tidy.data$Min_temp >=10, "Hot", "Warm"))
tidy.data$Min_temp <- as.factor(tidy.data$Min_temp)
tidy.data$Min_temp <- relevel(tidy.data$Min_temp, ref="Warm")
###------------tidy data completed -------------
### All NA's are removed and then simulate
### Linear Regressoin
coef_pval <- c()
for (i in year){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(lm(Total_s ~ pre_Total_s + log(GDP) + log(POP) +Min_temp,
data = train))$coefficients[,c(1,4)]
coef_pval <- cbind(coef_pval,temp)
}
name <- c()
for (i in year){
name <- c(name, paste(i,"Coef"),paste(i,"p-value"))
}
dimnames(coef_pval) <- list(c("Intercept", "pre_Total","log(GDP)","log(POP)","factor(Cold)",
"factor(Hot)"),c(name))
i
year
coef_pval <- c()
for (i in year){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train))$coefficients[-7 ,c(1,4)]  #log scale remove
coef_pval <- cbind(coef_pval,temp)
}
train
View(train)
str(train)
coef_pval <- c()
for (i in 1994){
train <- subset(tidy.data, year ==i)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train <- na.omit(train)
temp <- summary(tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train))$coefficients[-7 ,c(1,4)]  #log scale remove
coef_pval <- cbind(coef_pval,temp)
}
train <- subset(tidy.data, year ==1994)
train$Total_s <- train$Total/sum(train$Total, na.rm = TRUE)
train
View(train)
str(train)
train <- na.omit(train)
View(train)
temp <- summary(tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train))$coefficients[-7 ,c(1,4)]
tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train)
summary(tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train))
a <- tobit(Total_s ~ pre_Total_s + log(GDP) + log(POP) + Min_temp, left = 0, right =Inf,
dist ="gaussian", data = train)
a
summary(a)
train
str(train)
